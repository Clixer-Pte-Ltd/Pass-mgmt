<?php

namespace Tests\Feature;

use App\Models\SubConstructor;
use Tests\Feature\Company\CompanyTest;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;

class SubConstructorTest extends CompanyTest
{
    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->table = 'sub_constructors';
        $this->baseUri = 'sub-constructor';
    }

    /**
     * test create
     * @group company_sub_constructor_create
     * @test
     * @return void
     */
    public function create()
    {
        $subconstructor = $this->dataCreate = factory(SubConstructor::class)->make();
        $this->dataCheck = $subconstructor->toArray();
        $this->dataCheck['tenancy_start_date'] = $this->dataCheck['tenancy_start_date']->format('Y-m-d');
        $this->dataCheck['tenancy_end_date'] = $this->dataCheck['tenancy_end_date']->format('Y-m-d');
        $this->testCreate();
        $subconstructor->delete();
    }

    /**
     * test update
     * @group company_sub_constructor_update
     * @test
     * @return void
     */
    public function update()
    {
        $subconstructor = factory(SubConstructor::class)->create();
        $this->dataCheck = $this->dataUpdate = factory(SubConstructor::class)->make()->toArray();
        $this->dataUpdate['id'] = $subconstructor->id;
        $this->dataCheck['tenancy_start_date'] = $this->dataCheck['tenancy_start_date']->format('Y-m-d');
        $this->dataCheck['tenancy_end_date'] = $this->dataCheck['tenancy_end_date']->format('Y-m-d');
        $this->testUpdate($subconstructor);
        $subconstructor->delete();
    }

    /**
     * test update
     * @group company_sub_constructor_show
     * @test
     * @return void
     */
    public function show()
    {
        $subconstructor = factory(SubConstructor::class)->create();
        $this->testShow($subconstructor, 'crud::sub-constructor.show');
        $subconstructor->delete();
    }

    /**
     * test delete
     * @group company_sub_constructor_delete
     * @test
     * @return void
     */
    public function delete()
    {
        $subconstructor = factory(SubConstructor::class)->create();
        $this->dataCheck = $subconstructor->toArray();
        $this->dataCheck['tenancy_start_date'] = $this->dataCheck['tenancy_start_date']->format('Y-m-d');
        $this->dataCheck['tenancy_end_date'] = $this->dataCheck['tenancy_end_date']->format('Y-m-d');
        $this->testDelete($subconstructor);
    }

    /**
     * test renew
     * @group company_sub_constructor_renew
     * @test
     * @return void
     */
    public function renew()
    {
        $subconstructor = factory(SubConstructor::class)->create();
        $this->testRenew($subconstructor);
        $subconstructor->delete();
    }
}
